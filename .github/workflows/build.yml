name: Build

on:
  push:
    branches:
      - trunk
    tags:
      - 'v*'

jobs:
  build:
    name: Build - ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - release_for: ARM64 Linux
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: wiki-extractor
            name: wiki-extractor-gnu-linux-aarch64
          - release_for: 32-bit MSVC
            os: windows-latest
            target: i686-pc-windows-msvc
            bin: wiki-extractor.exe
            name: wiki-extractor-windows-i686.exe
          - release_for: 32-bit Linux
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
            bin: wiki-extractor
            name: wiki-extractor-gnu-linux-i686
          - release_for: 64-bit macOS
            os: macos-latest
            target: x86_64-apple-darwin
            bin: wiki-extractor
            name: wiki-extractor-darwin-x86_64
          - release_for: 64-bit MSVC
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: wiki-extractor.exe
            name: wiki-extractor-windows-x86_64.exe
          - release_for: 64-bit Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: wiki-extractor
            name: wiki-extractor-gnu-linux-x86_64
          - release_for: 64-bit FreeBSD
            os: ubuntu-latest
            target: x86_64-unknown-freebsd
            bin: wiki-extractor
            name: wiki-extractor-freebsd-x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
      - uses: clechasseur/rs-cargo@v2
        with:
          command: build
          args: --release --all-features
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: target/release/${{ matrix.platform.bin }}
          if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
      - run: |
          mkdir ./release
          for dir in ./wiki-extractor-*; do
            mv $(ls ./$dir/wiki-extractor*) ./release/$dir
          done
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./release/wiki-extractor-*
